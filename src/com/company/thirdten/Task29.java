package com.company.thirdten;

import com.company.EulerTask;

import java.util.HashSet;
import java.util.Set;

public class Task29 implements EulerTask {

    /* Рассмотрим все целочисленные комбинации ab для 2 ≤ a ≤ 5 и 2 ≤ b ≤ 5:
    22=4, 23=8, 24=16, 25=32
    32=9, 33=27, 34=81, 35=243
    42=16, 43=64, 44=256, 45=1024
    52=25, 53=125, 54=625, 55=3125
    Если их расположить в порядке возрастания, исключив повторения, мы получим следующую последовательность из 15 различных членов:
    4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
    Сколько различных членов имеет последовательность ab для 2 ≤ a ≤ 100 и 2 ≤ b ≤ 100? */

    /*Общий принцип решения:
    * считаем количество чисел, не учитывая повторения;
    * ищем количество повторений в каждом ряде числа в степени 2 ≤ b ≤ 100;
    * вычитаем из общего уоличества чисел общее количество поаторений*/
    @Override
    public int getAnswer() {
        //Общее количество чисел
        int result = 99*99;

        //Повторения будут возможны только для чисел, которые являются меньшим числом, возведенным в какую-либо степень

        // 1.) Сначала рассмотри квадраты чисел, которые меньше ста и не являются квадратами квадратов!
        //      4, 9, 25, 36, 49, 100 } 6
        //      квадраты квадратов: 16, 81 - не рассматриваем!
        //      число 64 пока не рассматриваем, т.к. это квадрат куба

        // Каждый квадрат имеет количество дубликатов
        int simpleSquare = (100 - 1) / 2;
        // Всего простых квадратов 6
        int simpleSquareSumm = simpleSquare * 6;

        //  2.) Рассмотри кубы чисел: 8 и 27
        //      Дубликаты простого числа:
        //          Паттерн 3b, т.е. последний дубликат простого числа - куб в 33 степени (соответсвует простому в 99 степени)
        //          начало - 2 (соответсвует простому числу в степени 6)
        //          промежуток [2; 33] с шагом 1 - дубликаты простого числа в соотв. степени
        int x1 = 33 - 1;
        //      Дубликаты квадрата:
        //          Паттерн 3b/2 (при помощи него получаем степень квадрата)
        //          повторения квадрата заканчиваются на степени куба 99 * 2 / 3 = 66;
        //          повторения начинаются на 34 (квадрат в степени 3 * 34 / 2 = 51)
        //          промежуток [34; 66] шаг 2 (знаменатель паттерна) - дубликаты квадрата
        int x2 = (66 - 34) / 2 + 1;
        // Общее количество дупликатов для случая 2 (числа 8 и 27)
        int x = (x1 + x2) * 2;

        //  3.) Четвертая степень числа: 16 и 81
        //      Дубликаты квадратов простого числа, паттерн 2b
        //      промежуток [2; 50] шаг 1
        int y1 = 50 - 1;

        //      Дубликаты кубов
        //      паттерн 4b/3 (при помощи него получаем степень куба)
        //      повторения заканчиваются на 100 * 3 / 4 = 75
        //      повторения начинаются на 51 * 4 / 3 = 68
        //      промежуток [51; 75] шаг 3
        int y2 = (75 - 51) / 3 + 1;
        // Общее количество повторений для 16 и 81
        int y = (y1 + y2) * 2;

        //  4.) Пятая степень числа: 32
        //      Дубликаты простого числа
        //      паттерн 5b
        //      повторения заканчиваются на 100 / 5 = 20
        //      промежуток [2; 20] шаг 1
        int z1 = 20 - 1;

        //      Дубликаты квадрата простого чила
        //      паттерн 5b/2
        //      повторения заканчиваются на 100 * 2 / 5 = 40
        //      повторения начинаются на 22 * 5 / 2 = 55
        //      промежуток [22; 40] шаг 2
        int z2 = (40 - 22) / 2 + 1;

        //      Дубликаты куба простого числа
        //      паттерн 5b/3
        //      повторения заканчиваются на 100 * 3 / 5 = 60
        //      повторения начинаются на 21 * 5 / 3 = 35
        //      промежуток [21; 60] шаг 3
        //      но степени 24, 30, 36 совпадают со случаем дубликатов квадрата (предыдущий)
        int z3 = (60 - 21) / 3 + 1 - 3;

        //      Дубликаты четвертой степени простого числа
        //      паттерн 5b/4
        //      повторения заканчиваются на 100 * 4 / 5 = 80
        //      повторения начинаются на 24 * 5 / 4 = 40 -- степень 24 уже была, нужны степени после 40
        //      повторения начинаются на 44 * 5 / 4 = 55
        //      промежуток [44; 80] шаг 4
        //      но степени 48, 60 совпадают со случаем дубликатов куба (предыдущий)
        int z4 = (80 - 44) / 4 + 1 - 2;

        // Общее количество дупликатов для случая 4 (число 32)
        int z = z1 + z2 + z3 + z4;

        //  5.) Шестая степень числа: 64
        //      Дубликаты простого числа (квадратного корня, т.е. 8)
        //      паттерн 2b
        //      повторения заканчиваются на 100 / 2 = 50
        //      промежуток [2; 50] шаг 1
        int w1 = 50 - 1;

        //      Дубликаты четвертой степени простого числа
        //      переходим сразу к четвертой, т.к. а предыдущем случае рассматривался куб простого числа (8 = 2 в степени 3)
        //      паттерн 6b/4
        //      повторения заканчиваются на 99 * 4 / 6 = 66
        //      повторения начинаются на 52 * 6 / 4 = 78
        //      промежуток [52; 66] шаг 2 (т.к. 6/4 можно сократить до 3/2)
        int w2 = (66 - 52) / 2 + 1;

        //      Дубликаты пятой степени простого числа
        //      паттерн 6b/5
        //      повторения заканчиваются на 96 * 5 / 6 = 80
        //      повторения начинаются на 55 * 6 / 5 = 66
        //      промежуток [55; 80] шаг 5 (60 входит в предыдущий промежуток)
        int w3 = (80 - 55) / 5 + 1 - 1;

        // Общее количество дупликатов для случая 5 (число 64)
        int w = w1 + w2 + w3;

        result = result - x - y - z - w - simpleSquareSumm;
        return result;
    }
}
